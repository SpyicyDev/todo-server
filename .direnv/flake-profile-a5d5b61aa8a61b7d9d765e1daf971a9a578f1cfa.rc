unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
BASH='/nix/store/wh9fhhkl76avfbdrl6hi2sxsfxxj3npn-bash-interactive-5.2p26/bin/bash'
HOSTTYPE='aarch64'
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LINENO='76'
MACHTYPE='aarch64-apple-darwin22.6.0'
NIX_BUILD_CORES='8'
export NIX_BUILD_CORES
NIX_STORE='/nix/store'
export NIX_STORE
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='darwin22.6.0'
PATH='/path-not-set'
export PATH
PS4='+ '
SHELL='/sbin/nologin'
builder='/nix/store/wh9fhhkl76avfbdrl6hi2sxsfxxj3npn-bash-interactive-5.2p26/bin/bash'
export builder
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
name='devenv-shell-env'
export name
out='/Users/mackhaymond/Desktop/coding/projects/todo-server/outputs/out'
export out
outputs='out'
shellHook='
# Remove all the unnecessary noise that is set by the build env
unset NIX_BUILD_TOP NIX_BUILD_CORES NIX_STORE
unset TEMP TEMPDIR TMP 
# $name variable is preserved to keep it compatible with pure shell https://github.com/sindresorhus/pure/blob/47c0c881f0e7cfdb5eaccd335f52ad17b897c060/pure.zsh#L235
unset builder out shellHook stdenv system
# Flakes stuff
unset dontAddDisableDepTrack outputs

# For `nix develop`. We get /noshell on Linux and /sbin/nologin on macOS.
if [[ "$SHELL" == "/noshell" || "$SHELL" == "/sbin/nologin" ]]; then
  export SHELL=/nix/store/wh9fhhkl76avfbdrl6hi2sxsfxxj3npn-bash-interactive-5.2p26/bin/bash
fi

# https://github.com/numtide/devshell/issues/158
PATH=${PATH#/path-not-set:}

export DEVENV_PROFILE=/nix/store/2lii44fy79a0ryc35rb8k317g9wfl3cb-devenv-profile

# add installed packages to PATH
export PATH="$DEVENV_PROFILE/bin:$PATH"

# prepend common compilation lookup paths
export PKG_CONFIG_PATH="$DEVENV_PROFILE/lib/pkgconfig:${PKG_CONFIG_PATH-}"
export LD_LIBRARY_PATH="$DEVENV_PROFILE/lib:${LD_LIBRARY_PATH-}"
export LIBRARY_PATH="$DEVENV_PROFILE/lib:${LIBRARY_PATH-}"
export C_INCLUDE_PATH="$DEVENV_PROFILE/include:${C_INCLUDE_PATH-}"

# these provide shell completions / default config options
export XDG_DATA_DIRS="$DEVENV_PROFILE/share:${XDG_DATA_DIRS-}"
export XDG_CONFIG_DIRS="$DEVENV_PROFILE/etc/xdg:${XDG_CONFIG_DIRS-}"

export CFLAGS='\''-iframework /nix/store/2lii44fy79a0ryc35rb8k317g9wfl3cb-devenv-profile/Library/Frameworks'\''
export DEVENV_DOTFILE='\''/Users/mackhaymond/Desktop/coding/projects/todo-server/.devenv'\''
export DEVENV_PROFILE='\''/nix/store/2lii44fy79a0ryc35rb8k317g9wfl3cb-devenv-profile'\''
export DEVENV_ROOT='\''/Users/mackhaymond/Desktop/coding/projects/todo-server'\''
export DEVENV_STATE='\''/Users/mackhaymond/Desktop/coding/projects/todo-server/.devenv/state'\''
export RUSTDOCFLAGS='\''-L framework=/nix/store/2lii44fy79a0ryc35rb8k317g9wfl3cb-devenv-profile/Library/Frameworks'\''
export RUSTFLAGS='\''-L framework=/nix/store/2lii44fy79a0ryc35rb8k317g9wfl3cb-devenv-profile/Library/Frameworks'\''
export RUST_SRC_PATH='\''/nix/store/9lzjgzhmgjkgqz1pwr4wk8ipygwbmxsf-rust-src-stable-2024-02-08/lib/rustlib/src/rust/library'\''


export CARGO_INSTALL_ROOT=$('\''/nix/store/2bglpqk4wxizbjpri67lbjgngs3pyjag-coreutils-9.4/bin/realpath'\'' '\''--no-symlinks'\'' '\''/Users/mackhaymond/Desktop/coding/projects/todo-server/.devenv/state/cargo-install'\'')
export PATH="$PATH:$CARGO_INSTALL_ROOT/bin"

hello

export PS1="\[\e[0;34m\](devenv)\[\e[0m\] ${PS1-}"

# set path to locales on non-NixOS Linux hosts


# note what environments are active, but make sure we don'\''t repeat them
if [[ ! "${DIRENV_ACTIVE-}" =~ (^|:)"$PWD"(:|$) ]]; then
  export DIRENV_ACTIVE="$PWD:${DIRENV_ACTIVE-}"
fi

# devenv helper
if [ ! type -p direnv &>/dev/null && -f .envrc ]; then
  echo "You have .envrc but direnv command is not installed."
  echo "Please install direnv: https://direnv.net/docs/installation.html"
fi

mkdir -p .devenv
rm -f .devenv/profile
ln -s /nix/store/2lii44fy79a0ryc35rb8k317g9wfl3cb-devenv-profile .devenv/profile

'
export shellHook
stdenv='/nix/store/w5jw1glf64r8ai6vifn3n36v56izdjgd-naked-stdenv'
export stdenv
system='aarch64-darwin'
export system
runHook ()
{
 
    eval "$shellHook";
    unset runHook
}
PATH="$PATH${nix_saved_PATH:+:$nix_saved_PATH}"
XDG_DATA_DIRS="$XDG_DATA_DIRS${nix_saved_XDG_DATA_DIRS:+:$nix_saved_XDG_DATA_DIRS}"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "$shellHook"
